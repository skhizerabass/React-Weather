{"version":3,"sources":["actions/index.js","reducers/weather.js","reducers/location.js","reducers/cities.js","reducers/index.js","components/WeatherCity/WeatherCity.js","components/App/TempCities.js","cities.js","components/ListItem.js","components/App/AddCities.js","components/Loading/Loading.js","components/TimeCity/TimeCity.js","components/WeatherTemp/WeatherTemp.js","components/App/ShowTemp.js","components/App/App.js","serviceWorker.js","index.js","store/index.js"],"names":["BASE_URL","REQUEST_WEATHER","RECEIVE_WEATHER","REQUEST_WEATHER_FAILED","APP_ID","fetchWeather","params","url","concat","dispatch","type","fetch","then","response","json","payload","receiveWeather","catch","error","requestWeatherFailed","toString","REQUEST_LOCATION","RECEIVE_LOCATION","ADD_CITY","initialState","isFetching","cities","rootReducer","combineReducers","weather","state","arguments","length","undefined","action","Object","assign","current","location","data","push","WeatherCity","_ref","city","to","react_default","a","createElement","Link","className","CitiesListView","this","props","map","components_WeatherCity_WeatherCity","React","Component","withRouter","connect","capitals","country","ListItem","substitueText","selectedValue","main_default","highlightClassName","searchWords","autoEscape","textToHighlight","AddCities","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleSubmit","bind","assertThisInitialized","cityList","value","selectedCity","e","preventDefault","input","refs","trim","setState","event","target","toUpperCase","savedCities","i","element","includes","_this2","onSubmit","onChange","findCities","placeholder","ref","onClick","myfunction","components_ListItem","Loading","ct","require","TimeComponent","time","Date","tick","scope","setInterval","mxTimezones","getTimezonesForCountry","aestTime","toLocaleTimeString","timeZone","name","hour12","split","WeatherTemp","sunrise","sunset","temperature","Weather","match","components_Loading_Loading","icon","id","TimeCity_TimeComponent","dt","sys","description","WeatherTemp_WeatherTemp","main","temp","AppRouter","BrowserRouter","Switch","Route","path","exact","component","TempCities","ShowTemp","isLocalhost","Boolean","window","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","store","createStore","applyMiddleware","thunkMiddleware","subscribe","getState","geolocation","getCurrentPosition","position","_position$coords","coords","latitude","longitude","ReactDOM","render","lib","App","document","getElementById","URL","process","href","origin","addEventListener","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"4PAEMA,EAAW,yCAEJC,EAAkB,kBAClBC,EAAkB,kBAClBC,EAAyB,yBAEhCC,EAAS,mCAyBR,SAASC,EAAaC,GAC5B,IAAMC,EAAG,GAAAC,OAAMR,EAAN,aAAAQ,OAA0BF,EAA1B,wBAAAE,OAAuDJ,GAEhE,OAAO,SAAUK,GAGhB,OAFAA,EA1BM,CACNC,KAAMT,IA2BCU,IAAMJ,GACXK,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAE,GAAI,OAAIL,EAlBV,SAAwBK,GAC9B,MAAO,CACNJ,KAAMR,EACNa,QAAS,CACRD,SAcuBE,CAAeF,MACrCG,MAAM,SAAAC,GAAK,OAAIT,EA1BZ,SAA8BS,GACpC,MAAO,CACNR,KAAMP,EACNe,SAuB0BC,CAAqBD,EAAME,gBAKhD,IAAMC,EAAmB,mBACnBC,EAAmB,mBAsCzB,IAAMC,EAAW,WChFxB,IAAMC,EAAe,CACpBC,YAAY,GCLb,IAAMD,EAAe,GCArB,IAAMA,EAAe,CACjBE,OAAO,ICEX,IAMeC,EANKC,0BAAgB,CACnCC,QHIc,WAA+C,IAA9BC,EAA8BC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtBP,EAAcU,EAAQH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC7D,OAAQC,EAAOxB,MACd,KAAKT,EACJ,OAAOkC,OAAOC,OAAO,GAAIN,EAAO,CAC/BL,YAAY,IAEd,KAAKtB,EACJ,OAAOgC,OAAOC,OAAO,GAAIN,EAAO,CAC/BL,YAAY,EACZP,MAAOgB,EAAOhB,QAEhB,KAAKhB,EACJ,OAAOiC,OAAOC,OAAO,GAAIN,EAAO,CAC/BL,YAAY,EACZY,QAASH,EAAOnB,QAAQD,OAExB,QACD,OAAOgB,IGpBTQ,SFHc,WAAgD,IAA9BR,EAA8BC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtBP,EAAcU,EAAQH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC9D,OAAQC,EAAOxB,MACd,KAAKW,EACJ,OAAOc,OAAOC,OAAO,GAAIN,EAAO,CAC/BL,YAAY,IAEd,KAAKH,EACJ,OAAOa,OAAOC,OAAO,GAAIN,EAAO,CAC/BL,YAAY,EACZc,KAAML,EAAOnB,QAAQuB,WAEvB,QACC,OAAOR,IERTJ,ODFc,WAAgD,IAA9BI,EAA8BC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtBP,EAAcU,EAAQH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC9D,OAAQC,EAAOxB,MACd,KAAKa,EACC,OAAOY,OAAOC,OAAO,GAAIN,EAAO,CAExBJ,OAAQI,EAAMJ,OAAOc,KAAKN,EAAOnB,QAAQW,UAEvD,QACC,OAAOI,qFESKW,EAjBK,SAAAC,GACnB,IADsBC,EACtBD,EADsBC,KAElBC,EAAM,gBAAgBD,EAC1B,OAECE,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMJ,GAAMA,GACZC,EAAAC,EAAAC,cAAA,MAAIE,UAAU,WAAWN,MCDtBO,mLAEI,IACIxB,EAAUyB,KAAKC,MAAM1B,OAArBA,OAEZ,OAECmB,EAAAC,EAAAC,cAAA,OAAKE,UAAY,cACHvB,EAAO2B,IAAI,SAAAV,GAAI,OAAIE,EAAAC,EAAAC,cAACO,EAAD,CAAaX,KAAMA,MACnCE,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMJ,GAAK,cACPC,EAAAC,EAAAC,cAAA,KAAGE,UAAY,yCAVVM,IAAMC,WA0BpBC,cAAWC,kBARF,SAAC5B,GAGxB,MAAO,CACNJ,OAHkBI,EAAXJ,SAOiBgC,CAAyBR,YCtCtCS,EAAS,CAElB,CACIC,QAAW,cACXjB,KAAQ,SAEZ,CACIiB,QAAW,UACXjB,KAAQ,UAEZ,CACIiB,QAAW,UACXjB,KAAQ,SAEZ,CACIiB,QAAW,iBACXjB,KAAQ,YAEZ,CACIiB,QAAW,UACXjB,KAAQ,oBAEZ,CACIiB,QAAW,SACXjB,KAAQ,UAEZ,CACIiB,QAAW,WACXjB,KAAQ,cAEZ,CACIiB,QAAW,aACXjB,KAAQ,MAEZ,CACIiB,QAAW,sBACXjB,KAAQ,gBAEZ,CACIiB,QAAW,YACXjB,KAAQ,gBAEZ,CACIiB,QAAW,UACXjB,KAAQ,WAEZ,CACIiB,QAAW,QACXjB,KAAQ,cAEZ,CACIiB,QAAW,YACXjB,KAAQ,YAEZ,CACIiB,QAAW,UACXjB,KAAQ,QAEZ,CACIiB,QAAW,aACXjB,KAAQ,QAEZ,CACIiB,QAAW,UACXjB,KAAQ,UAEZ,CACIiB,QAAW,UACXjB,KAAQ,aAEZ,CACIiB,QAAW,aACXjB,KAAQ,SAEZ,CACIiB,QAAW,WACXjB,KAAQ,cAEZ,CACIiB,QAAW,UACXjB,KAAQ,SAEZ,CACIiB,QAAW,UACXjB,KAAQ,uBAEZ,CACIiB,QAAW,SACXjB,KAAQ,YAEZ,CACIiB,QAAW,QACXjB,KAAQ,cAEZ,CACIiB,QAAW,UACXjB,KAAQ,YAEZ,CACIiB,QAAW,SACXjB,KAAQ,WAEZ,CACIiB,QAAW,UACXjB,KAAQ,UAEZ,CACIiB,QAAW,yBACXjB,KAAQ,YAEZ,CACIiB,QAAW,WACXjB,KAAQ,YAEZ,CACIiB,QAAW,gBACXjB,KAAQ,MAEZ,CACIiB,QAAW,SACXjB,KAAQ,eAEZ,CACIiB,QAAW,iCACXjB,KAAQ,MAEZ,CACIiB,QAAW,SACXjB,KAAQ,uBAEZ,CACIiB,QAAW,WACXjB,KAAQ,SAEZ,CACIiB,QAAW,eACXjB,KAAQ,eAEZ,CACIiB,QAAW,UACXjB,KAAQ,aAEZ,CACIiB,QAAW,WACXjB,KAAQ,cAEZ,CACIiB,QAAW,WACXjB,KAAQ,UAEZ,CACIiB,QAAW,SACXjB,KAAQ,UAEZ,CACIiB,QAAW,aACXjB,KAAQ,SAEZ,CACIiB,QAAW,iBACXjB,KAAQ,eAEZ,CACIiB,QAAW,2BACXjB,KAAQ,UAEZ,CACIiB,QAAW,OACXjB,KAAQ,UAEZ,CACIiB,QAAW,QACXjB,KAAQ,qBAEZ,CACIiB,QAAW,QACXjB,KAAQ,UAEZ,CACIiB,QAAW,mBACXjB,KAAQ,oBAEZ,CACIiB,QAAW,0BACXjB,KAAQ,eAEZ,CACIiB,QAAW,WACXjB,KAAQ,UAEZ,CACIiB,QAAW,UACXjB,KAAQ,UAEZ,CACIiB,QAAW,QACXjB,KAAQ,eAEZ,CACIiB,QAAW,eACXjB,KAAQ,UAEZ,CACIiB,QAAW,aACXjB,KAAQ,WAEZ,CACIiB,QAAW,UACXjB,KAAQ,UAEZ,CACIiB,QAAW,OACXjB,KAAQ,aAEZ,CACIiB,QAAW,SACXjB,KAAQ,WAEZ,CACIiB,QAAW,iBACXjB,KAAQ,SAEZ,CACIiB,QAAW,UACXjB,KAAQ,cAEZ,CACIiB,QAAW,WACXjB,KAAQ,YAEZ,CACIiB,QAAW,WACXjB,KAAQ,UAEZ,CACIiB,QAAW,qBACXjB,KAAQ,yBAEZ,CACIiB,QAAW,aACXjB,KAAQ,QAEZ,CACIiB,QAAW,UACXjB,KAAQ,SAEZ,CACIiB,QAAW,QACXjB,KAAQ,SAEZ,CACIiB,QAAW,cACXjB,KAAQ,gBAEZ,CACIiB,QAAW,UACXjB,KAAQ,UAEZ,CACIiB,QAAW,oBACXjB,KAAQ,UAEZ,CACIiB,QAAW,UACXjB,KAAQ,UAEZ,CACIiB,QAAW,UACXjB,KAAQ,WAEZ,CACIiB,QAAW,WACXjB,KAAQ,eAEZ,CACIiB,QAAW,mBACXjB,KAAQ,WAEZ,CACIiB,QAAW,gBACXjB,KAAQ,eAEZ,CACIiB,QAAW,eACXjB,KAAQ,QAEZ,CACIiB,QAAW,UACXjB,KAAQ,0BAEZ,CACIiB,QAAW,SACXjB,KAAQ,SAEZ,CACIiB,QAAW,gBACXjB,KAAQ,WAEZ,CACIiB,QAAW,mBACXjB,KAAQ,WAEZ,CACIiB,QAAW,8BACXjB,KAAQ,MAEZ,CACIiB,QAAW,QACXjB,KAAQ,cAEZ,CACIiB,QAAW,SACXjB,KAAQ,UAEZ,CACIiB,QAAW,UACXjB,KAAQ,WAEZ,CACIiB,QAAW,UACXjB,KAAQ,UAEZ,CACIiB,QAAW,QACXjB,KAAQ,SAEZ,CACIiB,QAAW,YACXjB,KAAQ,aAEZ,CACIiB,QAAW,SACXjB,KAAQ,WAEZ,CACIiB,QAAW,YACXjB,KAAQ,QAEZ,CACIiB,QAAW,UACXjB,KAAQ,kBAEZ,CACIiB,QAAW,aACXjB,KAAQ,eAEZ,CACIiB,QAAW,OACXjB,KAAQ,OAEZ,CACIiB,QAAW,YACXjB,KAAQ,uBAEZ,CACIiB,QAAW,SACXjB,KAAQ,WAEZ,CACIiB,QAAW,gBACXjB,KAAQ,UAEZ,CACIiB,QAAW,SACXjB,KAAQ,cAEZ,CACIiB,QAAW,QACXjB,KAAQ,kBAEZ,CACIiB,QAAW,oCACXjB,KAAQ,MAEZ,CACIiB,QAAW,gCACXjB,KAAQ,QAEZ,CACIiB,QAAW,WACXjB,KAAQ,eAEZ,CACIiB,QAAW,YACXjB,KAAQ,YAEZ,CACIiB,QAAW,UACXjB,KAAQ,YAEZ,CACIiB,QAAW,UACXjB,KAAQ,WAEZ,CACIiB,QAAW,QACXjB,KAAQ,aAEZ,CACIiB,QAAW,YACXjB,KAAQ,WAEZ,CACIiB,QAAW,OACXjB,KAAQ,UAEZ,CACIiB,QAAW,OACXjB,KAAQ,WAEZ,CACIiB,QAAW,UACXjB,KAAQ,UAEZ,CACIiB,QAAW,SACXjB,KAAQ,aAEZ,CACIiB,QAAW,QACXjB,KAAQ,QAEZ,CACIiB,QAAW,cACXjB,KAAQ,gBAEZ,CACIiB,QAAW,UACXjB,KAAQ,YAEZ,CACIiB,QAAW,QACXjB,KAAQ,SAEZ,CACIiB,QAAW,SACXjB,KAAQ,SAEZ,CACIiB,QAAW,YACXjB,KAAQ,UAEZ,CACIiB,QAAW,QACXjB,KAAQ,WAEZ,CACIiB,QAAW,WACXjB,KAAQ,WAEZ,CACIiB,QAAW,SACXjB,KAAQ,UAEZ,CACIiB,QAAW,aACXjB,KAAQ,WAEZ,CACIiB,QAAW,OACXjB,KAAQ,aAEZ,CACIiB,QAAW,SACXjB,KAAQ,QAEZ,CACIiB,QAAW,UACXjB,KAAQ,UAEZ,CACIiB,QAAW,UACXjB,KAAQ,UAEZ,CACIiB,QAAW,UACXjB,KAAQ,YAEZ,CACIiB,QAAW,yBACXjB,KAAQ,WAEZ,CACIiB,QAAW,gBACXjB,KAAQ,SAEZ,CACIiB,QAAW,YACXjB,KAAQ,WAEZ,CACIiB,QAAW,aACXjB,KAAQ,2BAEZ,CACIiB,QAAW,QACXjB,KAAQ,SAEZ,CACIiB,QAAW,YACXjB,KAAQ,UAEZ,CACIiB,QAAW,aACXjB,KAAQ,gBAEZ,CACIiB,QAAW,SACXjB,KAAQ,YAEZ,CACIiB,QAAW,WACXjB,KAAQ,gBAEZ,CACIiB,QAAW,WACXjB,KAAQ,QAEZ,CACIiB,QAAW,OACXjB,KAAQ,UAEZ,CACIiB,QAAW,QACXjB,KAAQ,YAEZ,CACIiB,QAAW,mBACXjB,KAAQ,sBAEZ,CACIiB,QAAW,aACXjB,KAAQ,kBAEZ,CACIiB,QAAW,aACXjB,KAAQ,cAEZ,CACIiB,QAAW,YACXjB,KAAQ,cAEZ,CACIiB,QAAW,UACXjB,KAAQ,aAEZ,CACIiB,QAAW,SACXjB,KAAQ,eAEZ,CACIiB,QAAW,kCACXjB,KAAQ,WAEZ,CACIiB,QAAW,UACXjB,KAAQ,YAEZ,CACIiB,QAAW,SACXjB,KAAQ,gBAEZ,CACIiB,QAAW,WACXjB,KAAQ,cAEZ,CACIiB,QAAW,aACXjB,KAAQ,YAEZ,CACIiB,QAAW,UACXjB,KAAQ,SAEZ,CACIiB,QAAW,aACXjB,KAAQ,UAEZ,CACIiB,QAAW,UACXjB,KAAQ,oBAEZ,CACIiB,QAAW,UACXjB,KAAQ,YAEZ,CACIiB,QAAW,QACXjB,KAAQ,SAEZ,CACIiB,QAAW,QACXjB,KAAQ,aAEZ,CACIiB,QAAW,cACXjB,KAAQ,aAEZ,CACIiB,QAAW,uBACXjB,KAAQ,cAEZ,CACIiB,QAAW,gBACXjB,KAAQ,QAEZ,CACIiB,QAAW,cACXjB,KAAQ,cAEZ,CACIiB,QAAW,YACXjB,KAAQ,WAEZ,CACIiB,QAAW,QACXjB,KAAQ,UAEZ,CACIiB,QAAW,UACXjB,KAAQ,SAEZ,CACIiB,QAAW,OACXjB,KAAQ,SAEZ,CACIiB,QAAW,iBACXjB,KAAQ,YAEZ,CACIiB,QAAW,cACXjB,KAAQ,aAEZ,CACIiB,QAAW,mBACXjB,KAAQ,WAEZ,CACIiB,QAAW,2BACXjB,KAAQ,WAEZ,CACIiB,QAAW,SACXjB,KAAQ,QAEZ,CACIiB,QAAW,OACXjB,KAAQ,UAEZ,CACIiB,QAAW,WACXjB,KAAQ,aAEZ,CACIiB,QAAW,QACXjB,KAAQ,SAEZ,CACIiB,QAAW,YACXjB,KAAQ,QAEZ,CACIiB,QAAW,SACXjB,KAAQ,mBAEZ,CACIiB,QAAW,mBACXjB,KAAQ,gBAEZ,CACIiB,QAAW,WACXjB,KAAQ,UAEZ,CACIiB,QAAW,OACXjB,KAAQ,QAEZ,CACIiB,QAAW,cACXjB,KAAQ,UAEZ,CACIiB,QAAW,WACXjB,KAAQ,aAEZ,CACIiB,QAAW,SACXjB,KAAQ,YAEZ,CACIiB,QAAW,WACXjB,KAAQ,UAEZ,CACIiB,QAAW,cACXjB,KAAQ,YAEZ,CACIiB,QAAW,QACXjB,KAAQ,QAEZ,CACIiB,QAAW,UACXjB,KAAQ,eAEZ,CACIiB,QAAW,UACXjB,KAAQ,aAEZ,CACIiB,QAAW,qBACXjB,KAAQ,UAEZ,CACIiB,QAAW,SACXjB,KAAQ,UAEZ,CACIiB,QAAW,eACXjB,KAAQ,aAEZ,CACIiB,QAAW,wBACXjB,KAAQ,cAEZ,CACIiB,QAAW,cACXjB,KAAQ,YAEZ,CACIiB,QAAW,4BACXjB,KAAQ,gBAEZ,CACIiB,QAAW,mCACXjB,KAAQ,aAEZ,CACIiB,QAAW,QACXjB,KAAQ,QAEZ,CACIiB,QAAW,aACXjB,KAAQ,cAEZ,CACIiB,QAAW,wBACXjB,KAAQ,KAEZ,CACIiB,QAAW,eACXjB,KAAQ,UAEZ,CACIiB,QAAW,WACXjB,KAAQ,aAEZ,CACIiB,QAAW,UACXjB,KAAQ,SAEZ,CACIiB,QAAW,aACXjB,KAAQ,YAEZ,CACIiB,QAAW,eACXjB,KAAQ,YAEZ,CACIiB,QAAW,YACXjB,KAAQ,aAEZ,CACIiB,QAAW,WACXjB,KAAQ,cAEZ,CACIiB,QAAW,WACXjB,KAAQ,aAEZ,CACIiB,QAAW,kBACXjB,KAAQ,WAEZ,CACIiB,QAAW,UACXjB,KAAQ,aAEZ,CACIiB,QAAW,eACXjB,KAAQ,YAEZ,CACIiB,QAAW,+CACXjB,KAAQ,MAEZ,CACIiB,QAAW,cACXjB,KAAQ,SAEZ,CACIiB,QAAW,cACXjB,KAAQ,QAEZ,CACIiB,QAAW,QACXjB,KAAQ,UAEZ,CACIiB,QAAW,WACXjB,KAAQ,MAEZ,CACIiB,QAAW,QACXjB,KAAQ,WAEZ,CACIiB,QAAW,WACXjB,KAAQ,cAEZ,CACIiB,QAAW,yBACXjB,KAAQ,gBAEZ,CACIiB,QAAW,YACXjB,KAAQ,WAEZ,CACIiB,QAAW,SACXjB,KAAQ,aAEZ,CACIiB,QAAW,cACXjB,KAAQ,QAEZ,CACIiB,QAAW,QACXjB,KAAQ,YAEZ,CACIiB,QAAW,aACXjB,KAAQ,YAEZ,CACIiB,QAAW,WACXjB,KAAQ,UAEZ,CACIiB,QAAW,WACXjB,KAAQ,WAEZ,CACIiB,QAAW,mCACXjB,KAAQ,MAEZ,CACIiB,QAAW,OACXjB,KAAQ,OAEZ,CACIiB,QAAW,UACXjB,KAAQ,WAEZ,CACIiB,QAAW,QACXjB,KAAQ,cAEZ,CACIiB,QAAW,sBACXjB,KAAQ,iBAEZ,CACIiB,QAAW,UACXjB,KAAQ,SAEZ,CACIiB,QAAW,SACXjB,KAAQ,UAEZ,CACIiB,QAAW,eACXjB,KAAQ,YAEZ,CACIiB,QAAW,2BACXjB,KAAQ,iBAEZ,CACIiB,QAAW,SACXjB,KAAQ,YAEZ,CACIiB,QAAW,SACXjB,KAAQ,WAEZ,CACIiB,QAAW,UACXjB,KAAQ,QAEZ,CACIiB,QAAW,uBACXjB,KAAQ,aAEZ,CACIiB,QAAW,iBACXjB,KAAQ,UAEZ,CACIiB,QAAW,gBACXjB,KAAQ,cAEZ,CACIiB,QAAW,uCACXjB,KAAQ,MAEZ,CACIiB,QAAW,UACXjB,KAAQ,cAEZ,CACIiB,QAAW,aACXjB,KAAQ,WAEZ,CACIiB,QAAW,UACXjB,KAAQ,aAEZ,CACIiB,QAAW,YACXjB,KAAQ,WAEZ,CACIiB,QAAW,UACXjB,KAAQ,SAEZ,CACIiB,QAAW,0BACXjB,KAAQ,aAEZ,CACIiB,QAAW,uBACXjB,KAAQ,oBAEZ,CACIiB,QAAW,QACXjB,KAAQ,WAEZ,CACIiB,QAAW,oBACXjB,KAAQ,YAEZ,CACIiB,QAAW,iBACXjB,KAAQ,UAEZ,CACIiB,QAAW,QACXjB,KAAQ,SAEZ,CACIiB,QAAW,aACXjB,KAAQ,WAEZ,CACIiB,QAAW,SACXjB,KAAQ,UAEZ,CACIiB,QAAW,WACXjB,KAAQ,4BC/6BDkB,mLApBP,IAAIlB,EAAOQ,KAAKC,MAAMT,KAClBmB,EAAgBX,KAAKC,MAAMW,cAE/B,OACYlB,EAAAC,EAAAC,cAACiB,EAAAlB,EAAD,CACImB,mBAAmB,eACnBC,YAAa,CAACJ,GACdK,YAAY,EACZC,gBAAiBzB,WAZlBY,IAAMC,WCMvBa,cAEF,SAAAA,EAAYjB,GAAO,IAAAkB,EAAA,OAAAnC,OAAAoC,EAAA,EAAApC,CAAAgB,KAAAkB,IACrBC,EAAAnC,OAAAqC,EAAA,EAAArC,CAAAgB,KAAAhB,OAAAsC,EAAA,EAAAtC,CAAAkC,GAAAK,KAAAvB,KAAMC,KACDuB,aAAeL,EAAKK,aAAaC,KAAlBzC,OAAA0C,EAAA,EAAA1C,QAAA0C,EAAA,EAAA1C,CAAAmC,KACdA,EAAKxC,MAAM,CACPgD,SAAS,GACTC,MAAM,GACNC,aAAa,IANFV,4EAWNW,GACfA,EAAEC,iBACF,IAAMC,EAAQhC,KAAKiC,KAAKzC,KACnBwC,EAAMJ,MAAMM,SAEElC,KAAKC,MAAM1B,OACjBA,OAAOc,KAAKW,KAAKrB,MAAMkD,cAC9BG,EAAMJ,MAAQ,GACd5B,KAAKmC,SAAS,CAACN,aAAa,KAC5B7B,KAAKmC,SAAS,CAACR,SAAS,yCAIjBS,GACP,IAAMJ,EAAQI,EAAMC,OAAOT,MAAMU,cACjCtC,KAAKmC,SAAS,CAACP,MAAMI,IACrB,IAAIL,EAAW,GAEf,GAAIK,EAAMnD,OAAS,EAEf,IADH,IAAI0D,EAAcvC,KAAKC,MAAM1B,OAAOA,OACzBiE,EAAI,EAAEA,EAAGhC,EAAS3B,OAAO2D,IAAI,CACjC,IAAIC,EAAUjC,EAASgC,GAKvB,GAHAC,EAAQjD,MAAQiD,EAAQjD,KAAK8C,cAAcI,SAASV,KAAYO,EAAYG,SAASD,EAAQjD,OAC7FmC,EAAStC,KAAKoD,EAAQjD,MAEnBmC,EAAS9C,QAAQ,EAChB,MAGZmB,KAAKmC,SAAS,CAACR,gDAIRnC,GAEPQ,KAAKmC,SAAS,CAACN,aAAarC,qCAI1B,IAAAmD,EAAA3C,KACI2B,EAAY3B,KAAKrB,MAAjBgD,SAEZ,OACUjC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACXJ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMJ,GAAK,KACPC,EAAAC,EAAAC,cAAA,KAAGE,UAAY,0CAGpBJ,EAAAC,EAAAC,cAAA,OAAKE,UAAY,cACZJ,EAAAC,EAAAC,cAAA,QAAME,UAAU,aAAa8C,SAAU5C,KAAKwB,cACzC9B,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aAEdJ,EAAAC,EAAAC,cAAA,SAAOE,UAAU,gBAAgB8B,MAAO5B,KAAKrB,MAAMiD,MAAOiB,SAAU,SAACT,GAAD,OAASO,EAAKG,WAAWV,IAASW,YAAY,cAAcC,IAAI,SACpItD,EAAAC,EAAAC,cAAA,KAAGE,UAAY,sCAIX6B,EAASzB,IAAI,SAAAV,GACf,OACEE,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cAAcmD,QAAS,WAAKN,EAAKO,WAAW1D,KAC3DE,EAAAC,EAAAC,cAACuD,EAAD,CAAU3D,KAAMA,EAAMoB,cAAe+B,EAAKhE,MAAMiD,WAIpD5B,KAAKrB,MAAMkD,aAAahD,OACzBa,EAAAC,EAAAC,cAAA,SAAOrC,KAAK,SAASuC,UAAU,eAAe8B,MAAM,SAAU,eA/E7DxB,IAAMC,WAkGfC,cAAWC,kBARF,SAAC5B,GAGxB,MAAO,CACNJ,OAHkBI,EAAXJ,SAOiBgC,CAAyBW,ICnGpCkC,mLANb,OACC1D,EAAAC,EAAAC,cAAA,+BAHmBQ,IAAMC,WCDtBgD,EAAKC,EAAQ,IAGEC,cAEjB,SAAAA,EAAYtD,GAAM,IAAAkB,EAAA,OAAAnC,OAAAoC,EAAA,EAAApC,CAAAgB,KAAAuD,IACdpC,EAAAnC,OAAAqC,EAAA,EAAArC,CAAAgB,KAAAhB,OAAAsC,EAAA,EAAAtC,CAAAuE,GAAAhC,KAAAvB,KAAMC,KACDtB,MAAM,CACP6E,KAAO,IAAIC,MAHDtC,oFAQdnB,KAAK0D,sCAIL,IAAIC,EAAQ3D,KACZ4D,YAAY,WACRD,EAAMxB,SAAS,CAACqB,KAAM,IAAIC,QAC5B,sCAIF,IAAIhD,EAAUT,KAAKC,MAAMQ,QACnBoD,EAAcR,EAAGS,uBAAuBrD,GAC1CsD,EAAW/D,KAAKrB,MAAM6E,KAAKQ,mBAAmB,QAAS,CAACC,SAAUJ,EAAY,GAAGK,KAAKC,QAAQ,IAElG,OADAJ,EAAWA,EAASK,MAAM,KAEtB1E,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eACXJ,EAAAC,EAAAC,cAAA,YAAOmE,EAAS,IAChBrE,EAAAC,EAAAC,cAAA,QAAME,UAAU,YAAYiE,EAAS,IACrCrE,EAAAC,EAAAC,cAAA,QAAME,UAAU,YAAYE,KAAKC,MAAMT,cA7BZY,IAAMC,WCH3CgD,EAAKC,EAAQ,IAEEe,mLAGpB,IAAI5D,EAAUT,KAAKC,MAAMQ,QACnBoD,EAAcR,EAAGS,uBAAuBrD,GAE1C6D,EAAUtE,KAAKC,MAAMqE,QACrBC,EAASvE,KAAKC,MAAMsE,OAKxB,OAHAD,EAAU,IAAIb,KAAa,IAARa,GAAcN,mBAAmB,QAAS,CAACC,SAAUJ,EAAY,GAAGK,OACvFK,EAAS,IAAId,KAAY,IAAPc,GAAaP,mBAAmB,QAAS,CAACC,SAAUJ,EAAY,GAAGK,OAGrFxE,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eACdJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eACfJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WACdJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,0CAAb,KADD,IAC6DJ,EAAAC,EAAAC,cAAA,QAAME,UAAU,sBAAsBE,KAAKC,MAAMuE,cAE9G9E,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WACdJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,sCAAb,KADD,IACyDJ,EAAAC,EAAAC,cAAA,QAAME,UAAU,sBAAsBwE,IAE/F5E,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WACdJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,qCAAb,KADD,IACwDJ,EAAAC,EAAAC,cAAA,QAAME,UAAU,sBAAsByE,aAtBvDnE,IAAMC,WCIzCoE,+LAGe,IACZjF,EAAQQ,KAAKC,MAAMyE,MAAMvH,OAAzBqC,KAEJA,GACFQ,KAAKC,MAAM3C,SAASJ,EAAY,KAAAG,OAAMmC,sCAI/B,IAEAd,EAAYsB,KAAKC,MAAjBvB,QAEN,GAAIA,EAAQX,MACb,OACC2B,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACfJ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMJ,GAAK,KACVC,EAAAC,EAAAC,cAAA,KAAGE,UAAY,0CAEjBJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACdJ,EAAAC,EAAAC,cAAA,gCAAwBlB,EAAQX,SAMlC,IAAKW,EAAQQ,QACZ,OACCQ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACfJ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMJ,GAAK,KACVC,EAAAC,EAAAC,cAAA,KAAGE,UAAY,0CAEjBJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACdJ,EAAAC,EAAAC,cAAC+E,EAAD,QAMF,IAAMC,EAAOlG,EAAQQ,QAAQR,QAAQ,GAEjCoB,EAAY,GAQhB,OANCA,EADE8E,EAAKA,KAAKlC,SAAS,KACT,iBAAiBkC,EAAKC,GAEtB,mBAAmBD,EAAKC,GAKpCnF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACdJ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMJ,GAAK,KACVC,EAAAC,EAAAC,cAAA,KAAGE,UAAY,0CAEjBJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACdJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACfJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,sBACdJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eACdJ,EAAAC,EAAAC,cAACkF,EAAD,CAAgBtB,KAAM9E,EAAQQ,QAAQ6F,GACrCvF,KAAMd,EAAQQ,QAAQgF,KACvBzD,QAAS/B,EAAQQ,QAAQ8F,IAAIvE,YAG9Bf,EAAAC,EAAAC,cAAA,OAAKE,UAAU,qBACfJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iCACdJ,EAAAC,EAAAC,cAAA,KAAGE,UAAWA,IACdJ,EAAAC,EAAAC,cAAA,QAAME,UAAU,aAAa8E,EAAKK,eAKnCvF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,sBACdJ,EAAAC,EAAAC,cAACsF,EAAD,CAAaV,YAAa9F,EAAQQ,QAAQiG,KAAKC,KAC9Cd,QAAW5F,EAAQQ,QAAQ8F,IAAIV,QAC/BC,OAAU7F,EAAQQ,QAAQ8F,IAAIT,OAC9B9D,QAAS/B,EAAQQ,QAAQ8F,IAAIvE,qBA7EdL,IAAMC,WAgGbC,cAAWC,kBATF,SAAC5B,GAGxB,MAAO,CACNQ,SAH6BR,EAAtBQ,SAIPT,QAJ6BC,EAAZD,UAQO6B,CAAyBkE,ICpFpCY,EAbG,kBAChB3F,EAAAC,EAAAC,cAAC0F,EAAA,EAAD,KACE5F,EAAAC,EAAAC,cAAA,WAEDF,EAAAC,EAAAC,cAAC2F,EAAA,EAAD,KACG7F,EAAAC,EAAAC,cAAC4F,EAAA,EAAD,CAAOC,KAAK,IAAIC,OAAO,EAAMC,UAAWC,IACxClG,EAAAC,EAAAC,cAAC4F,EAAA,EAAD,CAAOC,KAAK,qBAAqBE,UAAWE,IAC5CnG,EAAAC,EAAAC,cAAC4F,EAAA,EAAD,CAAOC,KAAK,aAAaE,UAAWzE,QCDpC4E,eAAcC,QACW,cAA7BC,OAAO7G,SAAS8G,UAEe,UAA7BD,OAAO7G,SAAS8G,UAEhBD,OAAO7G,SAAS8G,SAASvB,MACvB,4DAsCN,SAASwB,GAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACT1I,KAAK,SAAA+I,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB/H,QACf0H,UAAUC,cAAcO,YAI1BC,QAAQC,IACN,gHAKEX,GAAUA,EAAOY,UACnBZ,EAAOY,SAASR,KAMlBM,QAAQC,IAAI,sCAGRX,GAAUA,EAAOa,WACnBb,EAAOa,UAAUT,UAO5B1I,MAAM,SAAAC,GACL+I,QAAQ/I,MAAM,4CAA6CA,KClFjE,ICVuCM,GDUjC6I,GCTSC,sBACb3I,EACAH,GACA+I,0BAAgBC,MDQlBH,GAAMI,UAAU,WACfR,QAAQC,IAAIG,GAAMK,cAGnBL,GAAM5J,ShB8CE,SAAUA,GAEZ+I,UAAUmB,aACblK,EAlBK,CACNC,KAAMW,IAkBLmI,UAAUmB,YAAYC,mBAKvB,SAAiBC,GAAU,IAAAC,EACMD,EAASE,OAAjCC,EADkBF,EAClBE,SAAUC,EADQH,EACRG,UAClBxK,EApBK,CACNC,KAAMY,EACNP,QAAS,CACRuB,SAiByB,CAAE0I,WAAUC,iBAGtC,SAAe/J,GACd+I,QAAQ/I,MAAMA,MATd+I,QAAQC,IAAI,0CgBlDfgB,IAASC,OACRtI,EAAAC,EAAAC,cAACqI,EAAA,SAAD,CAAUf,MAAOA,IAChBxH,EAAAC,EAAAC,cAACsI,EAAD,OAEFC,SAASC,eAAe,SDJjB,SAAkBhC,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIgC,IAAIC,iBAAwBtC,OAAO7G,SAASoJ,MACpDC,SAAWxC,OAAO7G,SAASqJ,OAIvC,OAGFxC,OAAOyC,iBAAiB,OAAQ,WAC9B,IAAMtC,EAAK,GAAA9I,OAAMiL,iBAAN,sBAEPxC,GAgEV,SAAiCK,EAAOC,GAEtC5I,MAAM2I,GACH1I,KAAK,SAAAC,GAEJ,IAAMgL,EAAchL,EAASiL,QAAQC,IAAI,gBAEnB,MAApBlL,EAASmL,QACO,MAAfH,IAA8D,IAAvCA,EAAYI,QAAQ,cAG5CzC,UAAUC,cAAcyC,MAAMtL,KAAK,SAAA+I,GACjCA,EAAawC,aAAavL,KAAK,WAC7BuI,OAAO7G,SAAS8J,aAKpB/C,GAAgBC,EAAOC,KAG1BtI,MAAM,WACLgJ,QAAQC,IACN,mEArFAmC,CAAwB/C,EAAOC,GAI/BC,UAAUC,cAAcyC,MAAMtL,KAAK,WACjCqJ,QAAQC,IACN,+GAMJb,GAAgBC,EAAOC,MCvB/BE","file":"static/js/main.0e05fc11.chunk.js","sourcesContent":["import fetch from 'isomorphic-fetch';\n\nconst BASE_URL = 'http://api.openweathermap.org/data/2.5';\n\nexport const REQUEST_WEATHER = 'REQUEST_WEATHER';\nexport const RECEIVE_WEATHER = 'RECEIVE_WEATHER';\nexport const REQUEST_WEATHER_FAILED = 'REQUEST_WEATHER_FAILED';\n\nconst APP_ID = '2ecc38b6399b67e99e5a6c97147249ff';\n\nexport function requestWeather() {\n\treturn {\n\t\ttype: REQUEST_WEATHER\n\t};\n}\n\nexport function requestWeatherFailed(error) {\n\treturn {\n\t\ttype: REQUEST_WEATHER_FAILED,\n\t\terror\n\t};\n}\n\nexport function receiveWeather(json) {\n\treturn {\n\t\ttype: RECEIVE_WEATHER,\n\t\tpayload: {\n\t\t\tjson\n\t\t}\n\t};\n}\n\n\nexport function fetchWeather(params) {\n\tconst url = `${BASE_URL}/weather?${params}&units=metric&appid=${APP_ID}`;\n\n\treturn function (dispatch) {\n\t\tdispatch(requestWeather());\n\n\t\treturn fetch(url)\n\t\t\t.then(response => response.json())\n\t\t\t.then(json => dispatch(receiveWeather(json)))\n\t\t\t.catch(error => dispatch(requestWeatherFailed(error.toString())));\n\t};\n}\n\n\nexport const REQUEST_LOCATION = 'REQUEST_LOCATION';\nexport const RECEIVE_LOCATION = 'RECEIVE_LOCATION';\n\nexport function requestLocation() {\n\treturn {\n\t\ttype: REQUEST_LOCATION\n\t};\n}\n\nexport function receiveLocation(location) {\n\treturn {\n\t\ttype: RECEIVE_LOCATION,\n\t\tpayload: {\n\t\t\tlocation\n\t\t}\n\t};\n}\n\nexport function fetchLocation() {\n\treturn function (dispatch) {\n\t\t\n\t\tif (navigator.geolocation) {\t\t\t\n\t\t\tdispatch(requestLocation());\n\t\t\tnavigator.geolocation.getCurrentPosition(success, error);\n\t\t} else {\n\t\t\tconsole.log('navigator.geolocation not supported.');\n\t\t}\n\n\t\tfunction success(position) {\n\t\t\tconst { latitude, longitude } = position.coords;\n\t\t\tdispatch(receiveLocation({ latitude, longitude }));\n\t\t}\n\n\t\tfunction error(error) {\n\t\t\tconsole.error(error);\n\t\t}\n\t}\n}\n\nexport const ADD_CITY = 'ADD_CITY';\n\n\nexport function addCity(cities){\n\treturn {\n\t\ttype: ADD_CITY,\n\t\tpayload:{\n\t\t\tcities\n\t\t}\n\t}\n}","import {\n\tREQUEST_WEATHER,\n\tREQUEST_WEATHER_FAILED,\n\tRECEIVE_WEATHER,\n} from '../actions';\n\nconst initialState = {\n\tisFetching: true\n};\n\nexport default function weather(state = initialState, action) {\n\tswitch (action.type) {\n\t\tcase REQUEST_WEATHER:\n\t\t\treturn Object.assign({}, state, {\n\t\t\t\tisFetching: true,\n\t\t\t});\n\t\tcase REQUEST_WEATHER_FAILED:\n\t\t\treturn Object.assign({}, state, {\n\t\t\t\tisFetching: false,\n\t\t\t\terror: action.error\n\t\t\t});\n\t\tcase RECEIVE_WEATHER:\n\t\t\treturn Object.assign({}, state, {\n\t\t\t\tisFetching: false,\n\t\t\t\tcurrent: action.payload.json\n\t\t\t});\n\t\t\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n","import { REQUEST_LOCATION, RECEIVE_LOCATION } from '../actions';\n\nconst initialState = {};\n\nexport default function location(state = initialState, action) {\n\tswitch (action.type) {\n\t\tcase REQUEST_LOCATION:\n\t\t\treturn Object.assign({}, state, {\n\t\t\t\tisFetching: true,\n\t\t\t});\n\t\tcase RECEIVE_LOCATION:\n\t\t\treturn Object.assign({}, state, {\n\t\t\t\tisFetching: false,\n\t\t\t\tdata: action.payload.location\n\t\t\t});\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}","import { ADD_CITY } from '../actions';\n\nconst initialState = {\n    cities:[]\n};\n\nexport default function location(state = initialState, action) {\n\tswitch (action.type) {\n\t\tcase ADD_CITY:\n        return Object.assign({}, state, {\n\n                cities: state.cities.push(action.payload.cities)\n\t\t\t});\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}","import { combineReducers } from 'redux';\nimport weather from './weather';\nimport location from './location';\nimport cities from './cities';\n\nconst rootReducer = combineReducers({\n\tweather,\n\tlocation,\n\tcities\n});\n\nexport default rootReducer;\n","import React from 'react';\nimport {PropTypes} from 'prop-types'\nimport {\n\tLink\n} from \"react-router-dom\";\n\nconst WeatherCity = ({ city }) =>\n {\n\tvar to =  '/ShowWeather/'+city;\n\treturn(\n\n \t<div>\n\t \t<Link to = {to} > \n\t\t\t<h5 className='capital'>{city}</h5>\n\t\t</Link>\n\t</div>\n )\n };\n\nWeatherCity.propTypes = {\n\tcity: PropTypes.string\n};\n\nexport default WeatherCity; ","import React from 'react'\nimport {\n\tconnect\n} from 'react-redux';\n\nimport {\n\tLink\n} from \"react-router-dom\";\nimport { withRouter } from 'react-router-dom'\nimport WeatherCity from '../WeatherCity/WeatherCity';\n\n\nclass CitiesListView extends React.Component {\n\n\trender() {\n        const{cities} = this.props.cities;\n\n\t\treturn (\n\t\t\t\n\t\t\t<div className = 'center_div' >\n                {cities.map(city => <WeatherCity city={city}/>)}\n                    <Link to = '/addCities' > \n                        <i className = 'button_add fa fa-2x fa-plus'></i>\n                    </Link>\n\t\t\t</div>\n\n\t\t)\n\t}\n\n}\nconst mapStateToProps = (state) => {\n\tconst { cities } = state;\n\n\treturn {\n\t\tcities\n\t};\n};\n\nexport default withRouter(connect(mapStateToProps)(CitiesListView))\n","export const capitals=[\n\n    {\n        \"country\": \"Afghanistan\",\n        \"city\": \"Kabul\"\n    },\n    {\n        \"country\": \"Albania\",\n        \"city\": \"Tirana\"\n    },\n    {\n        \"country\": \"Algeria\",\n        \"city\": \"Alger\"\n    },\n    {\n        \"country\": \"American Samoa\",\n        \"city\": \"Fagatogo\"\n    },\n    {\n        \"country\": \"Andorra\",\n        \"city\": \"Andorra la Vella\"\n    },\n    {\n        \"country\": \"Angola\",\n        \"city\": \"Luanda\"\n    },\n    {\n        \"country\": \"Anguilla\",\n        \"city\": \"The Valley\"\n    },\n    {\n        \"country\": \"Antarctica\",\n        \"city\": null\n    },\n    {\n        \"country\": \"Antigua and Barbuda\",\n        \"city\": \"Saint John's\"\n    },\n    {\n        \"country\": \"Argentina\",\n        \"city\": \"Buenos Aires\"\n    },\n    {\n        \"country\": \"Armenia\",\n        \"city\": \"Yerevan\"\n    },\n    {\n        \"country\": \"Aruba\",\n        \"city\": \"Oranjestad\"\n    },\n    {\n        \"country\": \"Australia\",\n        \"city\": \"Canberra\"\n    },\n    {\n        \"country\": \"Austria\",\n        \"city\": \"Wien\"\n    },\n    {\n        \"country\": \"Azerbaijan\",\n        \"city\": \"Baku\"\n    },\n    {\n        \"country\": \"Bahamas\",\n        \"city\": \"Nassau\"\n    },\n    {\n        \"country\": \"Bahrain\",\n        \"city\": \"al-Manama\"\n    },\n    {\n        \"country\": \"Bangladesh\",\n        \"city\": \"Dhaka\"\n    },\n    {\n        \"country\": \"Barbados\",\n        \"city\": \"Bridgetown\"\n    },\n    {\n        \"country\": \"Belarus\",\n        \"city\": \"Minsk\"\n    },\n    {\n        \"country\": \"Belgium\",\n        \"city\": \"Bruxelles [Brussel]\"\n    },\n    {\n        \"country\": \"Belize\",\n        \"city\": \"Belmopan\"\n    },\n    {\n        \"country\": \"Benin\",\n        \"city\": \"Porto-Novo\"\n    },\n    {\n        \"country\": \"Bermuda\",\n        \"city\": \"Hamilton\"\n    },\n    {\n        \"country\": \"Bhutan\",\n        \"city\": \"Thimphu\"\n    },\n    {\n        \"country\": \"Bolivia\",\n        \"city\": \"La Paz\"\n    },\n    {\n        \"country\": \"Bosnia and Herzegovina\",\n        \"city\": \"Sarajevo\"\n    },\n    {\n        \"country\": \"Botswana\",\n        \"city\": \"Gaborone\"\n    },\n    {\n        \"country\": \"Bouvet Island\",\n        \"city\": null\n    },\n    {\n        \"country\": \"Brazil\",\n        \"city\": \"Brasília\"\n    },\n    {\n        \"country\": \"British Indian Ocean Territory\",\n        \"city\": null\n    },\n    {\n        \"country\": \"Brunei\",\n        \"city\": \"Bandar Seri Begawan\"\n    },\n    {\n        \"country\": \"Bulgaria\",\n        \"city\": \"Sofia\"\n    },\n    {\n        \"country\": \"Burkina Faso\",\n        \"city\": \"Ouagadougou\"\n    },\n    {\n        \"country\": \"Burundi\",\n        \"city\": \"Bujumbura\"\n    },\n    {\n        \"country\": \"Cambodia\",\n        \"city\": \"Phnom Penh\"\n    },\n    {\n        \"country\": \"Cameroon\",\n        \"city\": \"Yaound\"\n    },\n    {\n        \"country\": \"Canada\",\n        \"city\": \"Ottawa\"\n    },\n    {\n        \"country\": \"Cape Verde\",\n        \"city\": \"Praia\"\n    },\n    {\n        \"country\": \"Cayman Islands\",\n        \"city\": \"George Town\"\n    },\n    {\n        \"country\": \"Central African Republic\",\n        \"city\": \"Bangui\"\n    },\n    {\n        \"country\": \"Chad\",\n        \"city\": \"N'Djam\"\n    },\n    {\n        \"country\": \"Chile\",\n        \"city\": \"Santiago de Chile\"\n    },\n    {\n        \"country\": \"China\",\n        \"city\": \"Peking\"\n    },\n    {\n        \"country\": \"Christmas Island\",\n        \"city\": \"Flying Fish Cove\"\n    },\n    {\n        \"country\": \"Cocos (Keeling) Islands\",\n        \"city\": \"West Island\"\n    },\n    {\n        \"country\": \"Colombia\",\n        \"city\": \"Santaf\"\n    },\n    {\n        \"country\": \"Comoros\",\n        \"city\": \"Moroni\"\n    },\n    {\n        \"country\": \"Congo\",\n        \"city\": \"Brazzaville\"\n    },\n    {\n        \"country\": \"Cook Islands\",\n        \"city\": \"Avarua\"\n    },\n    {\n        \"country\": \"Costa Rica\",\n        \"city\": \"San Jos\"\n    },\n    {\n        \"country\": \"Croatia\",\n        \"city\": \"Zagreb\"\n    },\n    {\n        \"country\": \"Cuba\",\n        \"city\": \"La Habana\"\n    },\n    {\n        \"country\": \"Cyprus\",\n        \"city\": \"Nicosia\"\n    },\n    {\n        \"country\": \"Czech Republic\",\n        \"city\": \"Praha\"\n    },\n    {\n        \"country\": \"Denmark\",\n        \"city\": \"Copenhagen\"\n    },\n    {\n        \"country\": \"Djibouti\",\n        \"city\": \"Djibouti\"\n    },\n    {\n        \"country\": \"Dominica\",\n        \"city\": \"Roseau\"\n    },\n    {\n        \"country\": \"Dominican Republic\",\n        \"city\": \"Santo Domingo de Guzm\"\n    },\n    {\n        \"country\": \"East Timor\",\n        \"city\": \"Dili\"\n    },\n    {\n        \"country\": \"Ecuador\",\n        \"city\": \"Quito\"\n    },\n    {\n        \"country\": \"Egypt\",\n        \"city\": \"Cairo\"\n    },\n    {\n        \"country\": \"El Salvador\",\n        \"city\": \"San Salvador\"\n    },\n    {\n        \"country\": \"England\",\n        \"city\": \"London\"\n    },\n    {\n        \"country\": \"Equatorial Guinea\",\n        \"city\": \"Malabo\"\n    },\n    {\n        \"country\": \"Eritrea\",\n        \"city\": \"Asmara\"\n    },\n    {\n        \"country\": \"Estonia\",\n        \"city\": \"Tallinn\"\n    },\n    {\n        \"country\": \"Ethiopia\",\n        \"city\": \"Addis Abeba\"\n    },\n    {\n        \"country\": \"Falkland Islands\",\n        \"city\": \"Stanley\"\n    },\n    {\n        \"country\": \"Faroe Islands\",\n        \"city\": \"Tórshavn\"\n    },\n    {\n        \"country\": \"Fiji Islands\",\n        \"city\": \"Suva\"\n    },\n    {\n        \"country\": \"Finland\",\n        \"city\": \"Helsinki [Helsingfors]\"\n    },\n    {\n        \"country\": \"France\",\n        \"city\": \"Paris\"\n    },\n    {\n        \"country\": \"French Guiana\",\n        \"city\": \"Cayenne\"\n    },\n    {\n        \"country\": \"French Polynesia\",\n        \"city\": \"Papeete\"\n    },\n    {\n        \"country\": \"French Southern territories\",\n        \"city\": null\n    },\n    {\n        \"country\": \"Gabon\",\n        \"city\": \"Libreville\"\n    },\n    {\n        \"country\": \"Gambia\",\n        \"city\": \"Banjul\"\n    },\n    {\n        \"country\": \"Georgia\",\n        \"city\": \"Tbilisi\"\n    },\n    {\n        \"country\": \"Germany\",\n        \"city\": \"Berlin\"\n    },\n    {\n        \"country\": \"Ghana\",\n        \"city\": \"Accra\"\n    },\n    {\n        \"country\": \"Gibraltar\",\n        \"city\": \"Gibraltar\"\n    },\n    {\n        \"country\": \"Greece\",\n        \"city\": \"Athenai\"\n    },\n    {\n        \"country\": \"Greenland\",\n        \"city\": \"Nuuk\"\n    },\n    {\n        \"country\": \"Grenada\",\n        \"city\": \"Saint George's\"\n    },\n    {\n        \"country\": \"Guadeloupe\",\n        \"city\": \"Basse-Terre\"\n    },\n    {\n        \"country\": \"Guam\",\n        \"city\": \"Aga\"\n    },\n    {\n        \"country\": \"Guatemala\",\n        \"city\": \"Ciudad de Guatemala\"\n    },\n    {\n        \"country\": \"Guinea\",\n        \"city\": \"Conakry\"\n    },\n    {\n        \"country\": \"Guinea-Bissau\",\n        \"city\": \"Bissau\"\n    },\n    {\n        \"country\": \"Guyana\",\n        \"city\": \"Georgetown\"\n    },\n    {\n        \"country\": \"Haiti\",\n        \"city\": \"Port-au-Prince\"\n    },\n    {\n        \"country\": \"Heard Island and McDonald Islands\",\n        \"city\": null\n    },\n    {\n        \"country\": \"Holy See (Vatican City State)\",\n        \"city\": \"Citt\"\n    },\n    {\n        \"country\": \"Honduras\",\n        \"city\": \"Tegucigalpa\"\n    },\n    {\n        \"country\": \"Hong Kong\",\n        \"city\": \"Victoria\"\n    },\n    {\n        \"country\": \"Hungary\",\n        \"city\": \"Budapest\"\n    },\n    {\n        \"country\": \"Iceland\",\n        \"city\": \"Reykjav\"\n    },\n    {\n        \"country\": \"India\",\n        \"city\": \"New Delhi\"\n    },\n    {\n        \"country\": \"Indonesia\",\n        \"city\": \"Jakarta\"\n    },\n    {\n        \"country\": \"Iran\",\n        \"city\": \"Tehran\"\n    },\n    {\n        \"country\": \"Iraq\",\n        \"city\": \"Baghdad\"\n    },\n    {\n        \"country\": \"Ireland\",\n        \"city\": \"Dublin\"\n    },\n    {\n        \"country\": \"Israel\",\n        \"city\": \"Jerusalem\"\n    },\n    {\n        \"country\": \"Italy\",\n        \"city\": \"Roma\"\n    },\n    {\n        \"country\": \"Ivory Coast\",\n        \"city\": \"Yamoussoukro\"\n    },\n    {\n        \"country\": \"Jamaica\",\n        \"city\": \"Kingston\"\n    },\n    {\n        \"country\": \"Japan\",\n        \"city\": \"Tokyo\"\n    },\n    {\n        \"country\": \"Jordan\",\n        \"city\": \"Amman\"\n    },\n    {\n        \"country\": \"Kazakstan\",\n        \"city\": \"Astana\"\n    },\n    {\n        \"country\": \"Kenya\",\n        \"city\": \"Nairobi\"\n    },\n    {\n        \"country\": \"Kiribati\",\n        \"city\": \"Bairiki\"\n    },\n    {\n        \"country\": \"Kuwait\",\n        \"city\": \"Kuwait\"\n    },\n    {\n        \"country\": \"Kyrgyzstan\",\n        \"city\": \"Bishkek\"\n    },\n    {\n        \"country\": \"Laos\",\n        \"city\": \"Vientiane\"\n    },\n    {\n        \"country\": \"Latvia\",\n        \"city\": \"Riga\"\n    },\n    {\n        \"country\": \"Lebanon\",\n        \"city\": \"Beirut\"\n    },\n    {\n        \"country\": \"Lesotho\",\n        \"city\": \"Maseru\"\n    },\n    {\n        \"country\": \"Liberia\",\n        \"city\": \"Monrovia\"\n    },\n    {\n        \"country\": \"Libyan Arab Jamahiriya\",\n        \"city\": \"Tripoli\"\n    },\n    {\n        \"country\": \"Liechtenstein\",\n        \"city\": \"Vaduz\"\n    },\n    {\n        \"country\": \"Lithuania\",\n        \"city\": \"Vilnius\"\n    },\n    {\n        \"country\": \"Luxembourg\",\n        \"city\": \"Luxembourg [Luxemburg/L\"\n    },\n    {\n        \"country\": \"Macao\",\n        \"city\": \"Macao\"\n    },\n    {\n        \"country\": \"Macedonia\",\n        \"city\": \"Skopje\"\n    },\n    {\n        \"country\": \"Madagascar\",\n        \"city\": \"Antananarivo\"\n    },\n    {\n        \"country\": \"Malawi\",\n        \"city\": \"Lilongwe\"\n    },\n    {\n        \"country\": \"Malaysia\",\n        \"city\": \"Kuala Lumpur\"\n    },\n    {\n        \"country\": \"Maldives\",\n        \"city\": \"Male\"\n    },\n    {\n        \"country\": \"Mali\",\n        \"city\": \"Bamako\"\n    },\n    {\n        \"country\": \"Malta\",\n        \"city\": \"Valletta\"\n    },\n    {\n        \"country\": \"Marshall Islands\",\n        \"city\": \"Dalap-Uliga-Darrit\"\n    },\n    {\n        \"country\": \"Martinique\",\n        \"city\": \"Fort-de-France\"\n    },\n    {\n        \"country\": \"Mauritania\",\n        \"city\": \"Nouakchott\"\n    },\n    {\n        \"country\": \"Mauritius\",\n        \"city\": \"Port-Louis\"\n    },\n    {\n        \"country\": \"Mayotte\",\n        \"city\": \"Mamoutzou\"\n    },\n    {\n        \"country\": \"Mexico\",\n        \"city\": \"Ciudad de M\"\n    },\n    {\n        \"country\": \"Micronesia, Federated States of\",\n        \"city\": \"Palikir\"\n    },\n    {\n        \"country\": \"Moldova\",\n        \"city\": \"Chisinau\"\n    },\n    {\n        \"country\": \"Monaco\",\n        \"city\": \"Monaco-Ville\"\n    },\n    {\n        \"country\": \"Mongolia\",\n        \"city\": \"Ulan Bator\"\n    },\n    {\n        \"country\": \"Montserrat\",\n        \"city\": \"Plymouth\"\n    },\n    {\n        \"country\": \"Morocco\",\n        \"city\": \"Rabat\"\n    },\n    {\n        \"country\": \"Mozambique\",\n        \"city\": \"Maputo\"\n    },\n    {\n        \"country\": \"Myanmar\",\n        \"city\": \"Rangoon (Yangon)\"\n    },\n    {\n        \"country\": \"Namibia\",\n        \"city\": \"Windhoek\"\n    },\n    {\n        \"country\": \"Nauru\",\n        \"city\": \"Yaren\"\n    },\n    {\n        \"country\": \"Nepal\",\n        \"city\": \"Kathmandu\"\n    },\n    {\n        \"country\": \"Netherlands\",\n        \"city\": \"Amsterdam\"\n    },\n    {\n        \"country\": \"Netherlands Antilles\",\n        \"city\": \"Willemstad\"\n    },\n    {\n        \"country\": \"New Caledonia\",\n        \"city\": \"Noum\"\n    },\n    {\n        \"country\": \"New Zealand\",\n        \"city\": \"Wellington\"\n    },\n    {\n        \"country\": \"Nicaragua\",\n        \"city\": \"Managua\"\n    },\n    {\n        \"country\": \"Niger\",\n        \"city\": \"Niamey\"\n    },\n    {\n        \"country\": \"Nigeria\",\n        \"city\": \"Abuja\"\n    },\n    {\n        \"country\": \"Niue\",\n        \"city\": \"Alofi\"\n    },\n    {\n        \"country\": \"Norfolk Island\",\n        \"city\": \"Kingston\"\n    },\n    {\n        \"country\": \"North Korea\",\n        \"city\": \"Pyongyang\"\n    },\n    {\n        \"country\": \"Northern Ireland\",\n        \"city\": \"Belfast\"\n    },\n    {\n        \"country\": \"Northern Mariana Islands\",\n        \"city\": \"Garapan\"\n    },\n    {\n        \"country\": \"Norway\",\n        \"city\": \"Oslo\"\n    },\n    {\n        \"country\": \"Oman\",\n        \"city\": \"Masqat\"\n    },\n    {\n        \"country\": \"Pakistan\",\n        \"city\": \"Islamabad\"\n    },\n    {\n        \"country\": \"Palau\",\n        \"city\": \"Koror\"\n    },\n    {\n        \"country\": \"Palestine\",\n        \"city\": \"Gaza\"\n    },\n    {\n        \"country\": \"Panama\",\n        \"city\": \"Ciudad de Panam\"\n    },\n    {\n        \"country\": \"Papua New Guinea\",\n        \"city\": \"Port Moresby\"\n    },\n    {\n        \"country\": \"Paraguay\",\n        \"city\": \"Asunci\"\n    },\n    {\n        \"country\": \"Peru\",\n        \"city\": \"Lima\"\n    },\n    {\n        \"country\": \"Philippines\",\n        \"city\": \"Manila\"\n    },\n    {\n        \"country\": \"Pitcairn\",\n        \"city\": \"Adamstown\"\n    },\n    {\n        \"country\": \"Poland\",\n        \"city\": \"Warszawa\"\n    },\n    {\n        \"country\": \"Portugal\",\n        \"city\": \"Lisboa\"\n    },\n    {\n        \"country\": \"Puerto Rico\",\n        \"city\": \"San Juan\"\n    },\n    {\n        \"country\": \"Qatar\",\n        \"city\": \"Doha\"\n    },\n    {\n        \"country\": \"Reunion\",\n        \"city\": \"Saint-Denis\"\n    },\n    {\n        \"country\": \"Romania\",\n        \"city\": \"Bucuresti\"\n    },\n    {\n        \"country\": \"Russian Federation\",\n        \"city\": \"Moscow\"\n    },\n    {\n        \"country\": \"Rwanda\",\n        \"city\": \"Kigali\"\n    },\n    {\n        \"country\": \"Saint Helena\",\n        \"city\": \"Jamestown\"\n    },\n    {\n        \"country\": \"Saint Kitts and Nevis\",\n        \"city\": \"Basseterre\"\n    },\n    {\n        \"country\": \"Saint Lucia\",\n        \"city\": \"Castries\"\n    },\n    {\n        \"country\": \"Saint Pierre and Miquelon\",\n        \"city\": \"Saint-Pierre\"\n    },\n    {\n        \"country\": \"Saint Vincent and the Grenadines\",\n        \"city\": \"Kingstown\"\n    },\n    {\n        \"country\": \"Samoa\",\n        \"city\": \"Apia\"\n    },\n    {\n        \"country\": \"San Marino\",\n        \"city\": \"San Marino\"\n    },\n    {\n        \"country\": \"Sao Tome and Principe\",\n        \"city\": \"S\"\n    },\n    {\n        \"country\": \"Saudi Arabia\",\n        \"city\": \"Riyadh\"\n    },\n    {\n        \"country\": \"Scotland\",\n        \"city\": \"Edinburgh\"\n    },\n    {\n        \"country\": \"Senegal\",\n        \"city\": \"Dakar\"\n    },\n    {\n        \"country\": \"Seychelles\",\n        \"city\": \"Victoria\"\n    },\n    {\n        \"country\": \"Sierra Leone\",\n        \"city\": \"Freetown\"\n    },\n    {\n        \"country\": \"Singapore\",\n        \"city\": \"Singapore\"\n    },\n    {\n        \"country\": \"Slovakia\",\n        \"city\": \"Bratislava\"\n    },\n    {\n        \"country\": \"Slovenia\",\n        \"city\": \"Ljubljana\"\n    },\n    {\n        \"country\": \"Solomon Islands\",\n        \"city\": \"Honiara\"\n    },\n    {\n        \"country\": \"Somalia\",\n        \"city\": \"Mogadishu\"\n    },\n    {\n        \"country\": \"South Africa\",\n        \"city\": \"Pretoria\"\n    },\n    {\n        \"country\": \"South Georgia and the South Sandwich Islands\",\n        \"city\": null\n    },\n    {\n        \"country\": \"South Korea\",\n        \"city\": \"Seoul\"\n    },\n    {\n        \"country\": \"South Sudan\",\n        \"city\": \"Juba\"\n    },\n    {\n        \"country\": \"Spain\",\n        \"city\": \"Madrid\"\n    },\n    {\n        \"country\": \"SriLanka\",\n        \"city\": null\n    },\n    {\n        \"country\": \"Sudan\",\n        \"city\": \"Khartum\"\n    },\n    {\n        \"country\": \"Suriname\",\n        \"city\": \"Paramaribo\"\n    },\n    {\n        \"country\": \"Svalbard and Jan Mayen\",\n        \"city\": \"Longyearbyen\"\n    },\n    {\n        \"country\": \"Swaziland\",\n        \"city\": \"Mbabane\"\n    },\n    {\n        \"country\": \"Sweden\",\n        \"city\": \"Stockholm\"\n    },\n    {\n        \"country\": \"Switzerland\",\n        \"city\": \"Bern\"\n    },\n    {\n        \"country\": \"Syria\",\n        \"city\": \"Damascus\"\n    },\n    {\n        \"country\": \"Tajikistan\",\n        \"city\": \"Dushanbe\"\n    },\n    {\n        \"country\": \"Tanzania\",\n        \"city\": \"Dodoma\"\n    },\n    {\n        \"country\": \"Thailand\",\n        \"city\": \"Bangkok\"\n    },\n    {\n        \"country\": \"The Democratic Republic of Congo\",\n        \"city\": null\n    },\n    {\n        \"country\": \"Togo\",\n        \"city\": \"Lom\"\n    },\n    {\n        \"country\": \"Tokelau\",\n        \"city\": \"Fakaofo\"\n    },\n    {\n        \"country\": \"Tonga\",\n        \"city\": \"Nuku'alofa\"\n    },\n    {\n        \"country\": \"Trinidad and Tobago\",\n        \"city\": \"Port-of-Spain\"\n    },\n    {\n        \"country\": \"Tunisia\",\n        \"city\": \"Tunis\"\n    },\n    {\n        \"country\": \"Turkey\",\n        \"city\": \"Ankara\"\n    },\n    {\n        \"country\": \"Turkmenistan\",\n        \"city\": \"Ashgabat\"\n    },\n    {\n        \"country\": \"Turks and Caicos Islands\",\n        \"city\": \"Cockburn Town\"\n    },\n    {\n        \"country\": \"Tuvalu\",\n        \"city\": \"Funafuti\"\n    },\n    {\n        \"country\": \"Uganda\",\n        \"city\": \"Kampala\"\n    },\n    {\n        \"country\": \"Ukraine\",\n        \"city\": \"Kyiv\"\n    },\n    {\n        \"country\": \"United Arab Emirates\",\n        \"city\": \"Abu Dhabi\"\n    },\n    {\n        \"country\": \"United Kingdom\",\n        \"city\": \"London\"\n    },\n    {\n        \"country\": \"United States\",\n        \"city\": \"Washington\"\n    },\n    {\n        \"country\": \"United States Minor Outlying Islands\",\n        \"city\": null\n    },\n    {\n        \"country\": \"Uruguay\",\n        \"city\": \"Montevideo\"\n    },\n    {\n        \"country\": \"Uzbekistan\",\n        \"city\": \"Toskent\"\n    },\n    {\n        \"country\": \"Vanuatu\",\n        \"city\": \"Port-Vila\"\n    },\n    {\n        \"country\": \"Venezuela\",\n        \"city\": \"Caracas\"\n    },\n    {\n        \"country\": \"Vietnam\",\n        \"city\": \"Hanoi\"\n    },\n    {\n        \"country\": \"Virgin Islands, British\",\n        \"city\": \"Road Town\"\n    },\n    {\n        \"country\": \"Virgin Islands, U.S.\",\n        \"city\": \"Charlotte Amalie\"\n    },\n    {\n        \"country\": \"Wales\",\n        \"city\": \"Cardiff\"\n    },\n    {\n        \"country\": \"Wallis and Futuna\",\n        \"city\": \"Mata-Utu\"\n    },\n    {\n        \"country\": \"Western Sahara\",\n        \"city\": \"El-Aai\"\n    },\n    {\n        \"country\": \"Yemen\",\n        \"city\": \"Sanaa\"\n    },\n    {\n        \"country\": \"Yugoslavia\",\n        \"city\": \"Beograd\"\n    },\n    {\n        \"country\": \"Zambia\",\n        \"city\": \"Lusaka\"\n    },\n    {\n        \"country\": \"Zimbabwe\",\n        \"city\": \"Harare\"\n    }\n];\n\nexport const isoCountries = {\n    'AF' : {\n      name: 'Afghanistan',\n    },\n    'AX' : {\n      name: 'Aland Islands',\n    },\n    'AL' : {\n      name: 'Albania',\n    },\n    'DZ' : {\n      name: 'Algeria',\n    },\n    'AS' : {\n      name: 'American Samoa',\n    },\n    'AD' : {\n      name: 'Andorra',\n    },\n    'AO' : {\n      name: 'Angola',\n    },\n    'AI' : {\n      name: 'Anguilla',\n    },\n    'AQ' : {\n      name: 'Antarctica',\n    },\n    'AG' : {\n      name: 'Antigua And Barbuda',\n    },\n    'AR' : {\n      name: 'Argentina',\n    },\n    'AM' : {\n      name: 'Armenia',\n    },\n    'AW' : {\n      name: 'Aruba',\n    },\n    'AU' : {\n      name: 'Australia',\n    },\n    'AT' : {\n      name: 'Austria',\n    },\n    'AZ' : {\n      name: 'Azerbaijan',\n    },\n    'BS' : {\n      name: 'Bahamas',\n    },\n    'BH' : {\n      name: 'Bahrain',\n    },\n    'BD' : {\n      name: 'Bangladesh',\n    },\n    'BB' : {\n      name: 'Barbados',\n    },\n    'BY' : {\n      name: 'Belarus',\n    },\n    'BE' : {\n      name: 'Belgium',\n    },\n    'BZ' : {\n      name: 'Belize',\n    },\n    'BJ' : {\n      name: 'Benin',\n    },\n    'BM' : {\n      name: 'Bermuda',\n    },\n    'BT' : {\n      name: 'Bhutan',\n    },\n    'BO' : {\n      name: 'Bolivia',\n    },\n    'BA' : {\n      name: 'Bosnia And Herzegovina',\n    },\n    'BW' : {\n      name: 'Botswana',\n    },\n    'BV' : {\n      name: 'Bouvet Island',\n    },\n    'BR' : {\n      name: 'Brazil',\n    },\n    'IO' : {\n      name: 'British Indian Ocean Territory',\n    },\n    'BN' : {\n      name: 'Brunei Darussalam',\n    },\n    'BG' : {\n      name: 'Bulgaria',\n    },\n    'BF' : {\n      name: 'Burkina Faso',\n    },\n    'BI' : {\n      name: 'Burundi',\n    },\n    'KH' : {\n      name: 'Cambodia',\n    },\n    'CM' : {\n      name: 'Cameroon',\n    },\n    'CA' : {\n      name: 'Canada',\n    },\n    'CV' : {\n      name: 'Cape Verde',\n    },\n    'KY' : {\n      name: 'Cayman Islands',\n    },\n    'CF' : {\n      name: 'Central African Republic',\n    },\n    'TD' : {\n      name: 'Chad',\n    },\n    'CL' : {\n      name: 'Chile',\n    },\n    'CN' : {\n      name: 'China',\n    },\n    'CX' : {\n      name: 'Christmas Island',\n    },\n    'CC' : {\n      name: 'Cocos (Keeling) Islands',\n    },\n    'CO' : {\n      name: 'Colombia',\n    },\n    'KM' : {\n      name: 'Comoros',\n    },\n    'CG' : {\n      name: 'Congo',\n    },\n    'CD' : {\n      name: 'Congo, Democratic Republic',\n    },\n    'CK' : {\n      name: 'Cook Islands',\n    },\n    'CR' : {\n      name: 'Costa Rica',\n    },\n    'CI' : {\n      name: 'Cote D\\'Ivoire',\n    },\n    'HR' : {\n      name: 'Croatia',\n    },\n    'CU' : {\n      name: 'Cuba',\n    },\n    'CY' : {\n      name: 'Cyprus',\n    },\n    'CZ' : {\n      name: 'Czech Republic',\n    },\n    'DK' : {\n      name: 'Denmark',\n    },\n    'DJ' : {\n      name: 'Djibouti',\n    },\n    'DM' : {\n      name: 'Dominica',\n    },\n    'DO' : {\n      name: 'Dominican Republic',\n    },\n    'EC' : {\n      name: 'Ecuador',\n    },\n    'EG' : {\n      name: 'Egypt',\n    },\n    'SV' : {\n      name: 'El Salvador',\n    },\n    'GQ' : {\n      name: 'Equatorial Guinea',\n    },\n    'ER' : {\n      name: 'Eritrea',\n    },\n    'EE' : {\n      name: 'Estonia',\n    },\n    'ET' : {\n      name: 'Ethiopia',\n    },\n    'FK' : {\n      name: 'Falkland Islands (Malvinas)',\n    },\n    'FO' : {\n      name: 'Faroe Islands',\n    },\n    'FJ' : {\n      name: 'Fiji',\n    },\n    'FI' : {\n      name: 'Finland',\n    },\n    'FR' : {\n      name: 'France',\n    },\n    'GF' : {\n      name: 'French Guiana',\n    },\n    'PF' : {\n      name: 'French Polynesia',\n    },\n    'TF' : {\n      name: 'French Southern Territories',\n    },\n    'GA' : {\n      name: 'Gabon',\n    },\n    'GM' : {\n      name: 'Gambia',\n    },\n    'GE' : {\n      name: 'Georgia',\n    },\n    'DE' : {\n      name: 'Germany',\n    },\n    'GH' : {\n      name: 'Ghana',\n    },\n    'GI' : {\n      name: 'Gibraltar',\n    },\n    'GR' : {\n      name: 'Greece',\n    },\n    'GL' : {\n      name: 'Greenland',\n    },\n    'GD' : {\n      name: 'Grenada',\n    },\n    'GP' : {\n      name: 'Guadeloupe',\n    },\n    'GU' : {\n      name: 'Guam',\n    },\n    'GT' : {\n      name: 'Guatemala',\n    },\n    'GG' : {\n      name: 'Guernsey',\n    },\n    'GN' : {\n      name: 'Guinea',\n    },\n    'GW' : {\n      name: 'Guinea-Bissau',\n    },\n    'GY' : {\n      name: 'Guyana',\n    },\n    'HT' : {\n      name: 'Haiti',\n    },\n    'HM' : {\n      name: 'Heard Island & Mcdonald Islands',\n    },\n    'VA' : {\n      name: 'Holy See (Vatican City State)',\n    },\n    'HN' : {\n      name: 'Honduras',\n    },\n    'HK' : {\n      name: 'Hong Kong',\n    },\n    'HU' : {\n      name: 'Hungary',\n    },\n    'IS' : {\n      name: 'Iceland',\n    },\n    'IN' : {\n      name: 'India',\n    },\n    'ID' : {\n      name: 'Indonesia',\n    },\n    'IR' : {\n      name: 'Iran, Islamic Republic Of',\n    },\n    'IQ' : {\n      name: 'Iraq',\n    },\n    'IE' : {\n      name: 'Ireland',\n    },\n    'IM' : {\n      name: 'Isle Of Man',\n    },\n    'IL' : {\n      name: 'Israel',\n    },\n    'IT' : {\n      name: 'Italy',\n    },\n    'JM' : {\n      name: 'Jamaica',\n    },\n    'JP' : {\n      name: 'Japan',\n    },\n    'JE' : {\n      name: 'Jersey',\n    },\n    'JO' : {\n      name: 'Jordan',\n    },\n    'KZ' : {\n      name: 'Kazakhstan',\n    },\n    'KE' : {\n      name: 'Kenya',\n    },\n    'KI' : {\n      name: 'Kiribati',\n    },\n    'KR' : {\n      name: 'Korea',\n    },\n    'KW' : {\n      name: 'Kuwait',\n    },\n    'KG' : {\n      name: 'Kyrgyzstan',\n    },\n    'LA' : {\n      name: 'Lao People\\'s Democratic Republic',\n    },\n    'LV' : {\n      name: 'Latvia',\n    },\n    'LB' : {\n      name: 'Lebanon',\n    },\n    'LS' : {\n      name: 'Lesotho',\n    },\n    'LR' : {\n      name: 'Liberia',\n    },\n    'LY' : {\n      name: 'Libyan Arab Jamahiriya',\n    },\n    'LI' : {\n      name: 'Liechtenstein',\n    },\n    'LT' : {\n      name: 'Lithuania',\n    },\n    'LU' : {\n      name: 'Luxembourg',\n    },\n    'MO' : {\n      name: 'Macao',\n    },\n    'MK' : {\n      name: 'Macedonia',\n    },\n    'MG' : {\n      name: 'Madagascar',\n    },\n    'MW' : {\n      name: 'Malawi',\n    },\n    'MY' : {\n      name: 'Malaysia',\n    },\n    'MV' : {\n      name: 'Maldives',\n    },\n    'ML' : {\n      name: 'Mali',\n    },\n    'MT' : {\n      name: 'Malta',\n    },\n    'MH' : {\n      name: 'Marshall Islands',\n    },\n    'MQ' : {\n      name: 'Martinique',\n    },\n    'MR' : {\n      name: 'Mauritania',\n    },\n    'MU' : {\n      name: 'Mauritius',\n    },\n    'YT' : {\n      name: 'Mayotte',\n    },\n    'MX' : {\n      name: 'Mexico',\n    },\n    'FM' : {\n      name: 'Micronesia, Federated States Of',\n    },\n    'MD' : {\n      name: 'Moldova',\n    },\n    'MC' : {\n      name: 'Monaco',\n    },\n    'MN' : {\n      name: 'Mongolia',\n    },\n    'ME' : {\n      name: 'Montenegro',\n    },\n    'MS' : {\n      name: 'Montserrat',\n    },\n    'MA' : {\n      name: 'Morocco',\n    },\n    'MZ' : {\n      name: 'Mozambique',\n    },\n    'MM' : {\n      name: 'Myanmar',\n    },\n    'NA' : {\n      name: 'Namibia',\n    },\n    'NR' : {\n      name: 'Nauru',\n    },\n    'NP' : {\n      name: 'Nepal',\n    },\n    'NL' : {\n      name: 'Netherlands',\n    },\n    'AN' : {\n      name: 'Netherlands Antilles',\n    },\n    'NC' : {\n      name: 'New Caledonia',\n    },\n    'NZ' : {\n      name: 'New Zealand',\n    },\n    'NI' : {\n      name: 'Nicaragua',\n    },\n    'NE' : {\n      name: 'Niger',\n    },\n    'NG' : {\n      name: 'Nigeria',\n    },\n    'NU' : {\n      name: 'Niue',\n    },\n    'NF' : {\n      name: 'Norfolk Island',\n    },\n    'MP' : {\n      name: 'Northern Mariana Islands',\n    },\n    'NO' : {\n      name: 'Norway',\n    },\n    'OM' : {\n      name: 'Oman',\n    },\n    'PK' : {\n      name: 'Pakistan',\n    },\n    'PW' : {\n      name: 'Palau',\n    },\n    'PS' : {\n      name: 'Palestinian Territory, Occupied',\n    },\n    'PA' : {\n      name: 'Panama',\n    },\n    'PG' : {\n      name: 'Papua New Guinea',\n    },\n    'PY' : {\n      name: 'Paraguay',\n    },\n    'PE' : {\n      name: 'Peru',\n    },\n    'PH' : {\n      name: 'Philippines',\n    },\n    'PN' : {\n      name: 'Pitcairn',\n    },\n    'PL' : {\n      name: 'Poland',\n    },\n    'PT' : {\n      name: 'Portugal',\n    },\n    'PR' : {\n      name: 'Puerto Rico',\n    },\n    'QA' : {\n      name: 'Qatar',\n    },\n    'RE' : {\n      name: 'Reunion',\n    },\n    'RO' : {\n      name: 'Romania',\n    },\n    'RU' : {\n      name: 'Russian Federation',\n    },\n    'RW' : {\n      name: 'Rwanda',\n    },\n    'BL' : {\n      name: 'Saint Barthelemy',\n    },\n    'SH' : {\n      name: 'Saint Helena',\n    },\n    'KN' : {\n      name: 'Saint Kitts And Nevis',\n    },\n    'LC' : {\n      name: 'Saint Lucia',\n    },\n    'MF' : {\n      name: 'Saint Martin',\n    },\n    'PM' : {\n      name: 'Saint Pierre And Miquelon',\n    },\n    'VC' : {\n      name: 'Saint Vincent And Grenadines',\n    },\n    'WS' : {\n      name: 'Samoa',\n    },\n    'SM' : {\n      name: 'San Marino',\n    },\n    'ST' : {\n      name: 'Sao Tome And Principe',\n    },\n    'SA' : {\n      name: 'Saudi Arabia',\n    },\n    'SN' : {\n      name: 'Senegal',\n    },\n    'RS' : {\n      name: 'Serbia',\n    },\n    'SC' : {\n      name: 'Seychelles',\n    },\n    'SL' : {\n      name: 'Sierra Leone',\n    },\n    'SG' : {\n      name: 'Singapore',\n    },\n    'SK' : {\n      name: 'Slovakia',\n    },\n    'SI' : {\n      name: 'Slovenia',\n    },\n    'SB' : {\n      name: 'Solomon Islands',\n    },\n    'SO' : {\n      name: 'Somalia',\n    },\n    'ZA' : {\n      name: 'South Africa',\n    },\n    'GS' : {\n      name: 'South Georgia And Sandwich Isl.',\n    },\n    'ES' : {\n      name: 'Spain',\n    },\n    'LK' : {\n      name: 'Sri Lanka',\n    },\n    'SD' : {\n      name: 'Sudan',\n    },\n    'SR' : {\n      name: 'Suriname',\n    },\n    'SJ' : {\n      name: 'Svalbard And Jan Mayen',\n    },\n    'SZ' : {\n      name: 'Swaziland',\n    },\n    'SE' : {\n      name: 'Sweden',\n    },\n    'CH' : {\n      name: 'Switzerland',\n    },\n    'SY' : {\n      name: 'Syrian Arab Republic',\n    },\n    'TW' : {\n      name: 'Taiwan',\n    },\n    'TJ' : {\n      name: 'Tajikistan',\n    },\n    'TZ' : {\n      name: 'Tanzania',\n    },\n    'TH' : {\n      name: 'Thailand',\n    },\n    'TL' : {\n      name: 'Timor-Leste',\n    },\n    'TG' : {\n      name: 'Togo',\n    },\n    'TK' : {\n      name: 'Tokelau',\n    },\n    'TO' : {\n      name: 'Tonga',\n    },\n    'TT' : {\n      name: 'Trinidad And Tobago',\n    },\n    'TN' : {\n      name: 'Tunisia',\n    },\n    'TR' : {\n      name: 'Turkey',\n    },\n    'TM' : {\n      name: 'Turkmenistan',\n    },\n    'TC' : {\n      name: 'Turks And Caicos Islands',\n    },\n    'TV' : {\n      name: 'Tuvalu',\n    },\n    'UG' : {\n      name: 'Uganda',\n    },\n    'UA' : {\n      name: 'Ukraine',\n    },\n    'AE' : {\n      name: 'United Arab Emirates',\n    },\n    'GB' : {\n      name: 'United Kingdom',\n    },\n    'US' : {\n      name: 'United States',\n    },\n    'UM' : {\n      name: 'United States Outlying Islands',\n    },\n    'UY' : {\n      name: 'Uruguay',\n    },\n    'UZ' : {\n      name: 'Uzbekistan',\n    },\n    'VU' : {\n      name: 'Vanuatu',\n    },\n    'VE' : {\n      name: 'Venezuela',\n    },\n    'VN' : {\n      name: 'Viet Nam',\n    },\n    'VG' : {\n      name: 'Virgin Islands, British',\n    },\n    'VI' : {\n      name: 'Virgin Islands, U.S.',\n    },\n    'WF' : {\n      name: 'Wallis And Futuna',\n    },\n    'EH' : {\n      name: 'Western Sahara',\n    },\n    'YE' : {\n      name: 'Yemen',\n    },\n    'ZM' : {\n      name: 'Zambia',\n    },\n    'ZW' : {\n      name: 'Zimbabwe'\n    },\n  };","import React from 'react';\nimport {PropTypes} from 'prop-types'\n\nimport Highlighter from \"react-highlight-words\";\n\nclass ListItem extends React.Component {\n  \n    \n\trender() {\n        let city = this.props.city;\n        let substitueText = this.props.selectedValue;\n        // let values =city.replace(substitueText,'<span className=\"selectedText\">'+substitueText+'</span>');\n        return(\n                    <Highlighter\n                        highlightClassName='selectedText'\n                        searchWords={[substitueText]}\n                        autoEscape={true}\n                        textToHighlight={city}\n                    />\n                    \n            )\n}\n}\n\nListItem.propTypes = {\n    city: PropTypes.string.isRequired,\n    selectedValue:PropTypes.string.isRequired,\n\n};\nexport default ListItem;","import React from 'react'\nimport {\n\tconnect\n} from 'react-redux';\nimport {\n\tLink\n} from \"react-router-dom\";\nimport { withRouter } from 'react-router-dom'\nimport {capitals} from '../../cities';\nimport ListItem from '../ListItem';\n\nclass AddCities extends React.Component {\n\n    constructor(props) {\n\t\tsuper(props);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n        this.state={\n            cityList:[],\n            value:'',\n            selectedCity:''\n        }\n\n    }\n    \n    handleSubmit(e) {\n\t\te.preventDefault();\n\t\tconst input = this.refs.city;\n\t\tif (!input.value.trim()) return;\n\n        let cities = this.props.cities;\n        cities.cities.push(this.state.selectedCity)\n        input.value = '';\n        this.setState({selectedCity:''});\n        this.setState({cityList:[]});\n    }\n    \n    \n    findCities(event){\n        const input = event.target.value.toUpperCase();\n        this.setState({value:input})\n        var cityList = [];\n        // console.log(capitals);\n        if (input.length > 0) {\n        \tlet savedCities = this.props.cities.cities;\n            for(var i = 0;i< capitals.length;i++){\n                var element = capitals[i];\n                // console.log(savedCities);\n            if (element.city && element.city.toUpperCase().includes(input) && ! savedCities.includes(element.city)) {\n                cityList.push(element.city);\n                }\n                if(cityList.length>=7)\n                    break;\n        \t};\n        }\n        this.setState({cityList})\n\n    }\n\n    myfunction(city) {\n        // e.preventDefault();\n        this.setState({selectedCity:city})\n    }\n    \n\n\trender() {\n        const{cityList} = this.state;\n\n\t\treturn (\n            <div className=\"container\">\n                <Link to = '/' > \n                    <i className = 'button_back fa fa-2x fa-chevron-left'></i>\n                </Link>\n\n               <div className = 'center_div' >\n                    <form className=\"findCities\" onSubmit={this.handleSubmit}>\n                       <div className=\"searchBox\">\n                     \n                        <input className=\"searchTextBox\" value={this.state.value} onChange={(event)=>this.findCities(event)}  placeholder=\"Search city\" ref=\"city\" />\n                        <i className = 'button_search fa fa-chevron-down'></i>\n\n                        </div>\n                        {\n                            cityList.map(city=>{\n                          return(\n                            <div className='capitalItem' onClick={()=>{this.myfunction(city)}}>\n                            <ListItem city={city} selectedValue={this.state.value}/>\n                            </div>\n                            )\n                       })}\n                       {this.state.selectedCity.length?\n                       <input type='submit' className='theme_button' value='SAVE'/>: null\n                    }\n                    </form>\n               </div>\n\n            </div>\n\n\t\t)\n\t}\n\n}\nconst mapStateToProps = (state) => {\n\tconst { cities } = state;\n\n\treturn {\n\t\tcities\n\t};\n};\n\nexport default withRouter(connect(mapStateToProps)(AddCities))\n","import React from 'react';\n\nclass Loading extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\t<h1>Loading...</h1>\n\t\t);\n\t}\n}\n\nexport default Loading;","import React from 'react';\nconst ct = require('countries-and-timezones');\n\n\nexport default class TimeComponent extends React.Component{\n    \n    constructor(props){\n        super(props);\n        this.state={\n            time : new Date(),\n        }\n    }\n\n    componentWillMount(){\n        this.tick();\n    }\n\n    tick(){\n        var scope = this;\n        setInterval(function(){\n            scope.setState({time: new Date()});\n        },6000);\n    }\n\n    render(){\n        var country = this.props.country;\n        const mxTimezones = ct.getTimezonesForCountry(country);\n        var aestTime = this.state.time.toLocaleTimeString(\"en-US\", {timeZone: mxTimezones[0].name,hour12: false})\n        aestTime = aestTime.split(':');\n        return(\n            <div className=\"WeatherTime\">\n                <span>{aestTime[0]}</span>\n                <span className=\"TimeSpan\">{aestTime[1]}</span>\n                <span className=\"TimeCity\">{this.props.city}</span>\n            </div>\n     \n        );\n    }\n}\n","import React from 'react';\nconst ct = require('countries-and-timezones');\n\nexport default class WeatherTemp extends React.Component{\n\trender(){\n\t\n\tvar country = this.props.country;\n\tconst mxTimezones = ct.getTimezonesForCountry(country);\n\n\tvar sunrise = this.props.sunrise;\n\tvar sunset = this.props.sunset;\n\n\tsunrise = new Date(sunrise*1000).toLocaleTimeString(\"en-US\", {timeZone: mxTimezones[0].name})\n\tsunset = new Date(sunset*1000).toLocaleTimeString(\"en-US\", {timeZone: mxTimezones[0].name})\n\t\n\treturn(\n\t<div className=\"WeatherIcon\">\n\t\t<div className=\"WeatherTime\">\n\t\t<div className=\"TempDiv\">\n\t\t\t<i className=\"wi wi-fw wi-thermometer TimeIconMargin\"> </i> <span className=\"TimeSpanMarginLeft\">{this.props.temperature}</span>\n\t\t</div>\n\t\t<div className=\"TempDiv\">\n\t\t\t<i className=\"wi wi-fw wi-sunrise TimeIconMargin\"> </i> <span className=\"TimeSpanMarginLeft\">{sunrise}</span>\n\t\t</div>\n\t\t<div className=\"TempDiv\">\n\t\t\t<i className=\"wi wi-fw wi-sunset TimeIconMargin\"> </i> <span className=\"TimeSpanMarginLeft\">{sunset}</span>\n\t\t</div>\n\t\t</div>\n\t</div>\n\t);\n\n};\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchWeather  } from '../../actions'\nimport Loading from '../Loading/Loading';\nimport { withRouter,Link } from 'react-router-dom'\nimport TimerComponent from '../TimeCity/TimeCity';\nimport WeatherTemp from '../WeatherTemp/WeatherTemp';\nclass Weather extends React.Component {\n\n\n\tcomponentWillMount(){\n\t\tconst {city} = this.props.match.params;\n\t\t// console.log(this.props.match.params.city);\n\t\tif(city){\n\t\t\tthis.props.dispatch(fetchWeather(`q=${city}`));\n\t\t}\n\t}\n\n\trender() {\n\t\t\n\t\tconst { weather } = this.props;\n\t\t// console.log(isFetching);\n\t\t\t\tif (weather.error) {\n\t\t\treturn (\n\t\t\t\t<div className=\"container\">\n\t\t\t\t<Link to = '/' > \n\t\t\t\t\t<i className = 'button_back fa fa-2x fa-chevron-left'></i>\n\t\t\t\t</Link>\n\t\t\t<div className=\"WeatherDiv\">\n\t\t\t\t<p>Failed to get data: {weather.error}</p>\n\t\t\t</div>\n\t\t\t</div>\n\t\t\t);\n\t\t}\n\n\t\tif (!weather.current) {\n\t\t\treturn (\n\t\t\t\t<div className=\"container\">\n\t\t\t\t<Link to = '/' > \n\t\t\t\t\t<i className = 'button_back fa fa-2x fa-chevron-left'></i>\n\t\t\t\t</Link>\n\t\t\t<div className=\"WeatherDiv\">\n\t\t\t\t<Loading />\n\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\n\t\tconst icon = weather.current.weather[0];\n\t\t// console.log(icon);\n\t\tvar className = \"\";\n\t\tif(icon.icon.includes('d'))\n\t\t\tclassName = \"wi wi-owm-day-\"+icon.id;\n\t\telse\n\t\t\tclassName = \"wi wi-owm-night-\"+icon.id;\n\t\t\n\n\n\t\treturn (\n\t\t\t<div className=\"container\">\n\t\t\t\t<Link to = '/' > \n\t\t\t\t\t<i className = 'button_back fa fa-2x fa-chevron-left'></i>\n\t\t\t\t</Link>\n\t\t\t<div className=\"WeatherDiv\">\n\t\t\t\t<div className=\"row\">\n\t\t\t\t<div className=\"col-sm order-sm-2 \">\n\t\t\t\t\t<div className=\"WeatherIcon\">\n\t\t\t\t\t\t<TimerComponent time={weather.current.dt} \n\t\t\t\t\t\t\tcity={weather.current.name}\n\t\t\t\t\t\tcountry={weather.current.sys.country}/>\n\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"col-sm order-sm-1\">\n\t\t\t\t\t<div className=\"WeatherIcon WeatherIconMargin\" >\n\t\t\t\t\t\t<i className={className}></i>\n\t\t\t\t\t\t<span className='marginTop'>{icon.description}</span>\n\n\t\t\t\t\t</div>\n\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"col-sm order-sm-12\">\n\t\t\t\t\t\t<WeatherTemp temperature={weather.current.main.temp} \n\t\t\t\t\t\t\tsunrise = {weather.current.sys.sunrise}\n\t\t\t\t\t\t\tsunset = {weather.current.sys.sunset}\n\t\t\t\t\t\t\tcountry={weather.current.sys.country}\n\t\t\t\t\t\t/>\t\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = (state) => {\n\tconst { location, weather } = state;\n\n\treturn {\n\t\tlocation,\n\t\tweather\n\t};\n};\n\nexport default withRouter(connect(mapStateToProps)(Weather))\n","import React from 'react';\nimport { BrowserRouter, Route,Switch } from \"react-router-dom\";\nimport TempCities from './TempCities';\nimport AddCities from './AddCities';\nimport ShowTemp from './ShowTemp';\n\nconst AppRouter = () => (\n  <BrowserRouter>\n    <div>\n    \n\t  <Switch>\n      <Route path=\"/\" exact={true} component={TempCities} />\n      <Route path=\"/ShowWeather/:city\" component={ShowTemp} />\n      <Route path=\"/addCities\" component={AddCities} />\n\t  </Switch>\n    </div>\n  </BrowserRouter>\n);\n\nexport default AppRouter;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport configureStore from './store';\nimport { fetchLocation } from './actions';\n\nimport App from './components/App/App';\n// import \"weathericons/css/weather-icons.min.css\";\nimport \"./css/weather-icons.css\";\n\nimport './index.scss';\n// import '../weather_icons/weather-icons.scss';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = configureStore();\n\nstore.subscribe(() => {\n\tconsole.log(store.getState());\n});\n\nstore.dispatch(fetchLocation());\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<App />\n\t</Provider>,\ndocument.getElementById('root'));\nserviceWorker.register();\n","import { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport rootReducer from '../reducers';\n\nexport default function configureStore(initialState) {\n\tconst store = createStore(\n\t\trootReducer,\n\t\tinitialState,\n\t\tapplyMiddleware(thunkMiddleware)\n\t);\n\n\tif (module.hot) {\n\t\t// Enable Webpack hot module replacement for reducers\n\t\tmodule.hot.accept('../reducers', () => {\n\t\t\tconst nextRootReducer = require('../reducers').default;\n\t\t\tstore.replaceReducer(nextRootReducer);\n\t\t});\n\t}\n\n\treturn store;\n}"],"sourceRoot":""}